*****************************************************
** [Query String Decoder 'qDecoder']               **
**                                                 **
**  Source  Code Name : qDecoder.c                 **
**  Include Code Name : qDecoder.h                 **
**                                                 **
** Programmed by 'Seung-young, Kim'                **
**                                                 **
** Email : nobreak@shinan.hongik.ac.kr             **
** Home  : http://shinan.hongik.ac.kr/~nobreak     **
**                                                 **
** Hongik University Shinan Campus                 **
**                                                 **
** Designed by Perfectionist for Perfectionist!!!  **
*****************************************************

** Index
  0. 서론
  1. 각 Version별 지원 함수
  2. 각 function 기능 설명
  3. 예제
  4. Compile
  5. Example Makefile

0. 서론

  명    칭 : qDecoder
  개 발 자 : 김 승 영 (nobreak@shinan.hongik.ac.kr)
  소    속 : 홍익대학교 신안 캠퍼스
  사용환경 : Unix
  Language : C Language
  배포장소 : http://cgi.hongik.ac.kr
  목    적 : CGI 구현을 보다 빠르고 편리하게
  특    징 : CGI 구현에 공통되는 부분들을 모듈화하여 제공함으로써,
             프로그래밍의 가독성과 효율을 극대화 한다.

1. 각 Version별 지원 함수 (상위 Version은 하위의 것을 포함)

  [Version 3.4]
    ** Patch functions
    qCheckEmail() : '-' , '_'가 포함된 Email도 가능토록 수정
    qPrintf(), qPuts() :
    - 문자열의 내용중 &lt , &gt를 '<' , '>'로 보여주는점 수정
      (&amp;lt , &amp;gt로 출력함)
    - 'mailto:guest@hongik.ac.kr' 같은 문자열만을 자동 링크하였으나,
      'guest@hongik.ac.kr' 의 형태도 자동 링크 수행함 

    ** New functions
    void      qSetCookie(char *name, char *value, char *exp_days, char *domain, char *path, char *secure);
    char      *qURLencode(char *str);
    time_t    qGetGMTTime(char *gmt, time_t plus_sec);

  [Version 3.3.1]
    ** Patch functions
    qDecoder() : Query value내의 '&' 문자를 분리자로 인식하던점 수정

  [Version 3.3]
    int       qcDecoder(void);
    char      *qcValue(char *name);
    void      qcPrint(void);
    void      qcFree(void);

  [Version 3.2.2]
    int       qUpdateCounter(char *filename);
    void      qPuts(int mode, char *buf);
    int       qCheckURL(char *url);

  [Version 3.2]
    int       qReadCounter(char *filename);
    int       qSaveCounter(char *filename, int number);
    int       qStr09AZaz(char *str);

  [Version 3.1]
    int       qPrintf(int mode, char *format, ...);
    int       qCheckEmail(char *email);
    void      qError(char *format, ...);

  [Version 3.0]
    Entry     *qfDecoder(char *filename);
    char      *qfValue(Entry *first, char *name);
    void      qfPrint(Entry *first);
    void      qError(char *format, ...);

    char      *qRemoveSpace(char *str);

  [Version 2.2]
    int       qDecoder(void);
    char      *qValue(char *name);
    void      qPrint(void);
    void      qFree(void);

    void      qContentType(char *mimetype);

    void      qCgienv(Cgienv *env);
    struct tm *qGetTime(void);

    int       qCheckFile(char *filename);
    int       qSendFile(char *filename);

2. 각 Function 기능 설명

  ****************************************
  ** CGI 관련 함수군
  ****************************************

  int    qDecoder(void);
  기능 : 전달된 Query String을 해석하여 Linked List에 저장
  복귀 : 성공시 전달받은 인자의 갯수, 에러시 -1
  사용 : int num;
         num = qDecoder();
  
  char   *qValue(char *name);
  기능 : Linked List에서 변수명에대한 값(문자열)을 찾아 포인터를 넘겨줌
         qDecoder()이 사전에 호출이 안되었으면, 자동으로 수행
  복귀 : 변수명이 존재하면 변수값의 포인터, 변수명이 없으면 NULL
  사용 : char *test;
         test = qValue("변수명");

  void   qPrint(void);
  기능 : 프로그램의 Debugging용으로 전달된 인자를 모두 출력한다.
  사용 : qPrint();

  void   qFree(void);
  기능 : qDecoder()에 의해 할당된 Memory를 해제한다.
  사용 : qFree();

  char   *qURLencode(char *str);
  기능 : 문자열을 URL Encoding규칙으로 변환한다.
  복귀 : Encoding된 string pointer, 해제(free)는 사용자가 하여야 한다.
  사용 : char *encstr;
         encstr = qURLencode("안녕하세요?");

  void   qContentType(char *mimetype);
  기능 : MimeType을 출력한다.
         여러번 호출되어도 단 한번만 수행한다.
  사용 : qContentType("text/html");
         qContentType("image/gif");

  void   qCgienv(Cgienv *env);
  기능 : CGI의 환경변수와 시간을 구조체에 저장한다.
         구조체의 멤버구성은 qDecoder.h를 참조하기 바란다.
  사용 : Cgienv *myenv;
         qCgienv(myenv);

  ****************************************
  ** COOKIE 관련 함수군
  ****************************************

  void   qSetCookie(char *name, char *value, char *exp_days, char *domain, char *path, char *secure);
  기능 : name=value에 해당하는 COOKIE를 설정함.
  주의 : qContentType()이 호출되기 전에 사용하여야 한다.
  사용 : char *name, *value;
         name = "NAME", value = "Kim";
         /* NAME=Kim 이란 정보를 30일간 클라이언트에 저장한다 */
         qSetCookie(name, value, '30', NULL, NULL, NULL);

  int    qcDecoder(void);
  기능 : COOKIE를 해석하여 Linked List에 저장
  복귀 : 성공시 전달받은 인자의 갯수, 에러시 -1
  사용 : int num;
         num = qcDecoder();
  
  char   *qcValue(char *name);
  기능 : Linked List에서 변수명에대한 값(문자열)을 찾아 포인터를 넘겨줌
         qcDecoder()이 사전에 호출이 안되었으면, 자동으로 수행
  복귀 : 변수명이 존재하면 변수값의 포인터, 변수명이 없으면 NULL
  사용 : char *test;
         test = qcValue("변수명");

  void   qcPrint(void);
  기능 : 프로그램의 Debugging용으로 COOKIE값을 모두 출력한다.
  사용 : qcPrint();

  void   qcFree(void);
  기능 : qcDecoder()에 의해 할당된 Memory를 해제한다.
  사용 : qcFree();

  ****************************************
  ** 형식화된 Configuration FILE을 다루는 함수군  
  ****************************************

  ## 아래와 같은 형식의 화일을 읽어 Linked List에 저장한다.
  ---- test.conf ----
  name  = Kim
  phone = 123-4567
  addr  = 한국
  -------------------

  Entry  *qfDecoder(char *filename);
  기능 : 화일을 읽어 Linked List에 저장한다. (화일의 한행은 최고 1000Byte)
  복귀 : Linked List의 첫번째 레코드 포인터, 에러시 NULL
  사용 : Entry *FirstRecord;
         FirstRecord = qfDecoder("test.conf");

  char   *qfValue(Entry *first, char *name);
  기능 : 변수명의 변수값을 얻는다.
  복귀 : 성공시 변수값의 포인터, 실패시 NULL
  사용 : char *name;
         name = qfValue(FirstRecord, "name");

  void   qfPrint(Entry *first);
  기능 : 프로그램의 Debugging용으로 해석한 인자를 모두 출력한다.
  사용 : qfPrint(FirstRecord);

  void   qfFree(Entry *first);
  기능 : 할당된 Memory를 반환한다.
  사용 : qfFree(FirstRecord);


  ## 아래와 같은 형식의 카운터 화일을 다룬다.
  ---- number.dat ----
  74
  -------------------

  int    qReadCounter(char *filename);
  기능 : 화일명의 카운터 화일을 읽는다.
  복귀 : 성공시 카운터값, 에러시 0
  사용 : int count;
         count = qReadCount("number.dat");

  int    qSaveCounter(char *filename, int number);
  기능 : 지정된 화일명에 카운터 값을 저장(갱신)한다.
  복귀 : 성공시 1, 에러시 0
  사용 : qSaveCounter("number.dat", 75);

  int    qUpdateCounter(char *filename){
  기능 : 지정된 화일명의 카운터 값을 1 증가시킨다.
  복귀 : 성공시 기존 카운터값 + 1, 에러시 0
  사용 : int count;
         count = qUpdateCounter("number.dat");
  
  ****************************************
  ** FILE 관련 함수군
  ****************************************

  int    qCheckFile(char *filename);
  기능 : 화일의 존재여부를 파악한다.
  복귀 : 화일이 존재 하면 1, 화일이 없으면 0
         Permission에 의해 접근 불가능한 화일도 화일이 없다고 판단한다.
  사용 : if(qCheckFile("test.dat") == 0)qError("File not found");

  int    qSendFile(char *filename);
  기능 : 화일의 내용을 출력한다.
  복귀 : 정상 출력 1, 에러시 0
  사용 : qContentType("image/gif");
         qSendFile("mypic.gif");

         qContentType("text/html");
         qSendFile("myhtml.html");

  ****************************************
  ** 화면 출력 함수군
  ****************************************

  int    qPrintf(int mode, char *format, ...);
  기능 : printf()와 동일한 사용방법으로 HTML TAG의 적용 유뮤와 자동 Link를 행한다.
         (Max string size = 1000byte)
         Mode 0 : printf()와 동일하다, HTML이 적용됨을 뜻한다.
         Mode 1 : HTML TAG 자체를 출력한다. Link되는 부분 없음.
         Mode 2 : Mode 1 + 자동으로 link 시킴.
         Mode 3 : Mode 2 + link를 클릭했을시 전화면(target=_top) 출력한다.
         Mode 4 : HTML TAG를 무시한다. 출력되지 않음.
         Mode 5 : Mode 4 + 자동으로 Link 시킴.
         Mode 6 : Mode 5 + link를 클릭했을시 전화면(target=_top) 출력한다.         
  복귀 : 성공시 출력한 bytes 갯수, 에러시 EOF
  사용 : qPrintf(4, "%s", buf);
  예제 : qPrintf(i, "%s\n", "<font><b>\"http://shinan.hongik.ac.kr\"</b></font>");
         Mode 0 : <font><b>"http://shinan.hongik.ac.kr"</b></font>
         Mode 1 : &ltfont&gt&ltb&gt"http://shinan.hongik.ac.kr"&lt/b&gt&lt/font&gt
         Mode 2 : &ltfont&gt&ltb&gt"<a href="http://shinan.hongik.ac.kr" target="">http://shinan.hongik.ac.kr</a>"&lt/b&gt&lt/font&gt
         Mode 3 : &ltfont&gt&ltb&gt"<a href="http://shinan.hongik.ac.kr" target="_top">http://shinan.hongik.ac.kr</a>"&lt/b&gt&lt/font&gt
         Mode 4 : "http://shinan.hongik.ac.kr"
         Mode 5 : "<a href="http://shinan.hongik.ac.kr" target="">http://shinan.hongik.ac.kr</a>"
         Mode 6 : "<a href="http://shinan.hongik.ac.kr" target="_top">http://shinan.hongik.ac.kr</a>"

  void   qPuts(int mode, char *buf);
  기능 : 문자열을 HTML형식에 맞도록 출력한다. (qPrintf()와 기능 동일)
  주의 : 인자로 전해준 문자열이 변형된다.
         qPuts(mode, "문자열"); 이런식의 사용은 오류를 잃으킬수 있다.
         이때에는 아래의 사용법처럼 인자를 복사한후 사용한다.
  사용 : char buf[100];
         strcpy(buf, "http://shinan.hongik.ac.kr mailto:nobreak@shinan.hongik.ac.kr");
         qPuts(2, buf);
         

  void   qError(char *format, ...);
  기능 : 오류에대한 Message를 출력한다. printf() 함수와 사용법 동일.
         qDecoder.c를 수정하여 출력 형태를 고칠수 있다.
         (Max string size = 1000byte)
  사용 : qError("오류메시지");
         qError("%s에 오류", buf);


  ****************************************
  ** 기타 함수군
  ****************************************
  int    qCheckEmail(char *email){
  기능 : E-mail 주소의 오류를 판별한다.
  복귀 : 오류가 없으면 1, 문제가 발생하면 0
  사용 : qCheckEmail("nobreak@shinan.hongik.ac.kr");

  int    qCheckURL(char *url);
  기능 : URL 주소의 오류를 판별한다.
  복귀 : 오류가 없으면 1, 문제가 발생하면 0
  사용 : qCheckURL("http://shinan.hongik.ac.kr");

  char   *qRemoveSpace(char *str);
  기능 : 문자열의 앞뒤 공백과 CR, LF를 제거한다.
  복귀 : 성공시 문자열의 포인터, 실패시 NULL
  주의 : qRemoveSpace("문자열"); 이런식의 사용은 오류를 잃으킬수 있다.
         이때에는 아래의 사용법처럼 인자를 복사한후 사용한다.
  사용 : char teststr[100];
         strcpy(teststr, " Hello, world    \r\n");
         qRemoveSpace(teststr);
         // 삭제후 teststr에는 "Hello, world"가 들어간다.

  struct tm *qGetTime(void);
  기능 : 시간을 구조체 tm에 저장한다.
  복귀 : 구조체 tm의 포인터
  사용 : struct tm *mytime;
         mytime = qGetTime();

  time_t qGetGMTTime(char *gmt, time_t plus_sec);
  기능 : '현재시간+plus_sec'을 Cookie에서 사용하는 GMT 문자열 시간으로 변환한다.
  복귀 : 1970/1/1(00:00:00)부터 현제까지의 초 + plus_sec
  사용 : time_t plus_sec;
         char gmt[0xff];
         plus_sec = (time_t)300; /* 5분 */
         qGetGMTTime(gmt, plus_sec);
         printf("%s", gmt);         /* "Fri, 22-Aug-1997 15:11:30 GMT" */

  int    qStr09AZaz(char *str);
  기능 : 문자열이 '0' - '9', 'A' - 'Z', 'a' - 'z'로 이루어졌는지 판별한다.
  복귀 : 조건에 부합하면 1, 오류시 0
  사용 : if(qStr09AZaz("abc1234") == 1) printf("True");

3. 예제

    --------- Ex 1 ----------
    전달된 인자를 모두 출력하는 CGI

    #include "qDecoder.h"

    void main(void){
      qPrint();
    }

    위의 소스를 test.c로 저장한후 다음과 같이 Compile하자.
    (같은 디렉토리에 qDecoder.c와 qDecoder.h가 존재해야함)

    gcc -o test.cgi test.c qDecoder.c
    
    Browser상에서 다음과 같이 실행하여 결과를 확인한다.

    URL -> http://서버URL/test.cgi가있는디렉토리/test.cgi?a=b&c=de

    출력결과는 다음과 같다.

    'a' = 'b'
    'c' = 'de'  

    --------- Ex 2 ----------
    원하는 인자('a')를 선택하여 화면 출력

    #include "stdio.h"
    #include "qDecoder.h"

     void main(void){
       char *value;

       qContentType("text/html");

       value = qValue("a");
       printf("test a = %s", value);
     }
   
    예제 1과 같이 Compile 한후 같은 방법으로 실행한다.

    출력결과는 다음과 같다.

    test a = b

    --------- Ex 3 ----------
    정확한 함수 호출 절차

    #include "qDecoder.h"

    void main(void){
      qDecoder();
      qContentType("text/html");

      사용자 Code

      qFree();
    }

    qDecoder(), qFree()는 생략가능하다.
   

4. Compile

  GCC 사용자
    gcc -o 실행화일명 작성한소스.c qDecoder.c
    ex) gcc -o test.cgi main.c qDecoder.c
    ex) gcc -o test.cgi main.c sub.c qDecoder.c

  CC 사용자
    cc -o 실행화일명 작성한소스.c qDecoder.c
    ex) cc -o test.cgi main.c qDecoder.c

5. Example Makefile

---- Cut Here ----
## Define
CC      = gcc -Wall        # For GNU C Compiler(gcc)
#CC      = cc               # For the other C Compiler

OBJ  = $(OBJ1) $(OBJ2)
OBJ1 = qDecoder.o
OBJ2 =

PRG_NAME = test.cgi

## Main
all:    $(PRG_NAME)

## Link Module
$(PRG_NAME): $(OBJ)
        $(CC) -o $(PRG_NAME) $(OBJ)

## Compile Module
%.o:    %.c
        $(CC) -c -o $@ $<

## Clear Module
clean:  rm -f $(OBJ) $(PRG_NAME)
---- Cut Here ----

--- END ---
